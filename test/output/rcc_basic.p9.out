============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 4058 was started by cchui on crmb.local,
Mon May 30 16:05:11 2016
The command was "./provers/p9m4/prover9 -t300 -f /Users/cchui/Downloads/macleod-master/test/conversions/rcc_basic.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /Users/cchui/Downloads/macleod-master/test/conversions/rcc_basic.p9


formulas(sos).
(all x12 all x11 (p(x12,x11) <-> (all x13 (c(x13,x12) -> c(x13,x11))))).
(all x22 all x21 (pp(x22,x21) <-> p(x22,x21) & -p(x21,x22))).
(all x32 all x31 (o(x32,x31) <-> (exists x33 (p(x33,x32) & p(x33,x31))))).
(all x42 all x41 (ec(x42,x41) <-> c(x42,x41) & -o(x42,x41))).
(all x52 all x51 (ntpp(x52,x51) <-> pp(x52,x51) & -(exists x53 (ec(x53,x52) & ec(x53,x51))))).
(all x61 c(x61,x61)).
(all x72 all x71 (c(x72,x71) -> c(x71,x72))).
(all x81 c(x81,uni)).
(all x92 all x91 (x91 != Uni -> (o(x92,compl(x91)) <-> -p(x92,x91)))).
(all x102 all x101 all x103 (c(x102,sum(x101,x103)) <-> c(x102,x101) | c(x102,x103))).
(all x112 all x111 all x113 (o(x111,x113) -> (c(x112,prod(x111,x113)) <-> (exists x114 (p(x114,x111) & p(x114,x113) & c(x112,x114)))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 300).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 all x11 (p(x12,x11) <-> (all x13 (c(x13,x12) -> c(x13,x11))))) # label(non_clause).  [assumption].
2 (all x22 all x21 (pp(x22,x21) <-> p(x22,x21) & -p(x21,x22))) # label(non_clause).  [assumption].
3 (all x32 all x31 (o(x32,x31) <-> (exists x33 (p(x33,x32) & p(x33,x31))))) # label(non_clause).  [assumption].
4 (all x42 all x41 (ec(x42,x41) <-> c(x42,x41) & -o(x42,x41))) # label(non_clause).  [assumption].
5 (all x52 all x51 (ntpp(x52,x51) <-> pp(x52,x51) & -(exists x53 (ec(x53,x52) & ec(x53,x51))))) # label(non_clause).  [assumption].
6 (all x61 c(x61,x61)) # label(non_clause).  [assumption].
7 (all x72 all x71 (c(x72,x71) -> c(x71,x72))) # label(non_clause).  [assumption].
8 (all x81 c(x81,uni)) # label(non_clause).  [assumption].
9 (all x92 all x91 (x91 != Uni -> (o(x92,compl(x91)) <-> -p(x92,x91)))) # label(non_clause).  [assumption].
10 (all x102 all x101 all x103 (c(x102,sum(x101,x103)) <-> c(x102,x101) | c(x102,x103))) # label(non_clause).  [assumption].
11 (all x112 all x111 all x113 (o(x111,x113) -> (c(x112,prod(x111,x113)) <-> (exists x114 (p(x114,x111) & p(x114,x113) & c(x112,x114)))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-p(x,y) | -c(z,x) | c(z,y).  [clausify(1)].
p(x,y) | c(f1(x,y),x).  [clausify(1)].
p(x,y) | -c(f1(x,y),y).  [clausify(1)].
-pp(x,y) | p(x,y).  [clausify(2)].
-pp(x,y) | -p(y,x).  [clausify(2)].
pp(x,y) | -p(x,y) | p(y,x).  [clausify(2)].
-o(x,y) | p(f2(x,y),x).  [clausify(3)].
-o(x,y) | p(f2(x,y),y).  [clausify(3)].
o(x,y) | -p(z,x) | -p(z,y).  [clausify(3)].
-ec(x,y) | c(x,y).  [clausify(4)].
-ec(x,y) | -o(x,y).  [clausify(4)].
ec(x,y) | -c(x,y) | o(x,y).  [clausify(4)].
-ntpp(x,y) | pp(x,y).  [clausify(5)].
-ntpp(x,y) | -ec(z,x) | -ec(z,y).  [clausify(5)].
ntpp(x,y) | -pp(x,y) | ec(f3(x,y),x).  [clausify(5)].
ntpp(x,y) | -pp(x,y) | ec(f3(x,y),y).  [clausify(5)].
c(x,x).  [clausify(6)].
-c(x,y) | c(y,x).  [clausify(7)].
c(x,y).  [clausify(8)].
Uni = x | -o(y,compl(x)) | -p(y,x).  [clausify(9)].
Uni = x | o(y,compl(x)) | p(y,x).  [clausify(9)].
-c(x,sum(y,z)) | c(x,y) | c(x,z).  [clausify(10)].
c(x,sum(y,z)) | -c(x,y).  [clausify(10)].
c(x,sum(y,z)) | -c(x,z).  [clausify(10)].
-o(x,y) | -c(z,prod(x,y)) | p(f4(z,x,y),x).  [clausify(11)].
-o(x,y) | -c(z,prod(x,y)) | p(f4(z,x,y),y).  [clausify(11)].
-o(x,y) | -c(z,prod(x,y)) | c(z,f4(z,x,y)).  [clausify(11)].
-o(x,y) | c(z,prod(x,y)) | -p(u,x) | -p(u,y) | -c(z,u).  [clausify(11)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating pp/2
12 pp(x,y) | -p(x,y) | p(y,x).  [clausify(2)].
13 -pp(x,y) | p(x,y).  [clausify(2)].
14 -pp(x,y) | -p(y,x).  [clausify(2)].
15 -ntpp(x,y) | pp(x,y).  [clausify(5)].
Derived: -ntpp(x,y) | p(x,y).  [resolve(15,b,13,a)].
Derived: -ntpp(x,y) | -p(y,x).  [resolve(15,b,14,a)].
16 ntpp(x,y) | -pp(x,y) | ec(f3(x,y),x).  [clausify(5)].
Derived: ntpp(x,y) | ec(f3(x,y),x) | -p(x,y) | p(y,x).  [resolve(16,b,12,a)].
17 ntpp(x,y) | -pp(x,y) | ec(f3(x,y),y).  [clausify(5)].
Derived: ntpp(x,y) | ec(f3(x,y),y) | -p(x,y) | p(y,x).  [resolve(17,b,12,a)].

Eliminating ntpp/2
18 ntpp(x,y) | ec(f3(x,y),x) | -p(x,y) | p(y,x).  [resolve(16,b,12,a)].
19 -ntpp(x,y) | -ec(z,x) | -ec(z,y).  [clausify(5)].
20 -ntpp(x,y) | p(x,y).  [resolve(15,b,13,a)].
21 -ntpp(x,y) | -p(y,x).  [resolve(15,b,14,a)].
Derived: ec(f3(x,y),x) | -p(x,y) | p(y,x) | -ec(z,x) | -ec(z,y).  [resolve(18,a,19,a)].
22 ntpp(x,y) | ec(f3(x,y),y) | -p(x,y) | p(y,x).  [resolve(17,b,12,a)].
Derived: ec(f3(x,y),y) | -p(x,y) | p(y,x) | -ec(z,x) | -ec(z,y).  [resolve(22,a,19,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, c, p, o, ec ]).
Function symbol precedence:  function_order([ Uni, prod, sum, f1, f2, f3, compl, f4 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      23 -p(x,y) | -c(z,x) | c(z,y).  [clausify(1)].
kept:      24 p(x,y) | c(f1(x,y),x).  [clausify(1)].
kept:      25 p(x,y) | -c(f1(x,y),y).  [clausify(1)].
kept:      26 -o(x,y) | p(f2(x,y),x).  [clausify(3)].
kept:      27 -o(x,y) | p(f2(x,y),y).  [clausify(3)].
kept:      28 o(x,y) | -p(z,x) | -p(z,y).  [clausify(3)].
kept:      29 -ec(x,y) | c(x,y).  [clausify(4)].
kept:      30 -ec(x,y) | -o(x,y).  [clausify(4)].
kept:      31 ec(x,y) | -c(x,y) | o(x,y).  [clausify(4)].
kept:      32 c(x,x).  [clausify(6)].
kept:      33 -c(x,y) | c(y,x).  [clausify(7)].
kept:      34 c(x,y).  [clausify(8)].
kept:      35 Uni = x | -o(y,compl(x)) | -p(y,x).  [clausify(9)].
kept:      36 Uni = x | o(y,compl(x)) | p(y,x).  [clausify(9)].
           37 -c(x,sum(y,z)) | c(x,y) | c(x,z).  [clausify(10)].
           38 c(x,sum(y,z)) | -c(x,y).  [clausify(10)].
           39 c(x,sum(y,z)) | -c(x,z).  [clausify(10)].
           40 -o(x,y) | -c(z,prod(x,y)) | p(f4(z,x,y),x).  [clausify(11)].
kept:      41 -o(x,y) | p(f4(z,x,y),x).  [copy(40),unit_del(b,34)].
           42 -o(x,y) | -c(z,prod(x,y)) | p(f4(z,x,y),y).  [clausify(11)].
kept:      43 -o(x,y) | p(f4(z,x,y),y).  [copy(42),unit_del(b,34)].
           44 -o(x,y) | -c(z,prod(x,y)) | c(z,f4(z,x,y)).  [clausify(11)].
           45 -o(x,y) | c(z,prod(x,y)) | -p(u,x) | -p(u,y) | -c(z,u).  [clausify(11)].
kept:      46 ec(f3(x,y),x) | -p(x,y) | p(y,x) | -ec(z,x) | -ec(z,y).  [resolve(18,a,19,a)].
kept:      47 ec(f3(x,y),y) | -p(x,y) | p(y,x) | -ec(z,x) | -ec(z,y).  [resolve(22,a,19,a)].
kept:      48 o(x,x) | -p(y,x).  [factor(28,b,c)].
kept:      49 ec(x,y) | o(x,y).  [back_unit_del(31),unit_del(b,34)].
kept:      50 p(x,y).  [back_unit_del(25),unit_del(b,34)].
kept:      51 o(x,x).  [back_unit_del(48),unit_del(b,50)].
kept:      52 Uni = x | -o(y,compl(x)).  [back_unit_del(35),unit_del(c,50)].
kept:      53 o(x,y).  [back_unit_del(28),unit_del(b,50),unit_del(c,50)].
kept:      54 Uni = x.  [back_unit_del(52),unit_del(b,53)].
kept:      55 -ec(x,y).  [back_unit_del(30),unit_del(b,53)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
34 c(x,y).  [clausify(8)].
50 p(x,y).  [back_unit_del(25),unit_del(b,34)].
53 o(x,y).  [back_unit_del(28),unit_del(b,50),unit_del(c,50)].
54 Uni = x.  [back_unit_del(52),unit_del(b,53)].
55 -ec(x,y).  [back_unit_del(30),unit_del(b,53)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=3): 34 c(x,y).  [clausify(8)].

given #2 (I,wt=3): 50 p(x,y).  [back_unit_del(25),unit_del(b,34)].

given #3 (I,wt=3): 53 o(x,y).  [back_unit_del(28),unit_del(b,50),unit_del(c,50)].

given #4 (I,wt=3): 54 Uni = x.  [back_unit_del(52),unit_del(b,53)].

given #5 (I,wt=3): 55 -ec(x,y).  [back_unit_del(30),unit_del(b,53)].

given #6 (A,wt=3): 56 x = y.  [para(54(a,1),54(a,1))].

============================== STATISTICS ============================

Given=6. Generated=35. Kept=27. proofs=0.
Usable=5. Sos=0. Demods=0. Limbo=0, Disabled=56. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=8. Back_subsumed=15.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=7.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=3. Nonunit_bsub_feature_tests=44.
Megabytes=0.09.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

SEARCH FAILED

SEARCH FAILED

Exiting with failure.

------ process 4058 exit (sos_empty) ------

Process 4058 exit (sos_empty) Mon May 30 16:05:11 2016
============================= ./provers/p9m4/prover9 ================================
execution finished: Mon May 30 16:05:13 2016
total CPU time used: 0
The command was "./provers/p9m4/prover9 -t300 -f /Users/cchui/Downloads/macleod-master/test/conversions/rcc_basic.p9"
Input read from 
============================ end of footer ===========================
